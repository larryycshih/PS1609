@model WSU_Scholar.Models.Research

@{
    ViewBag.Title = "Create";
}

@section headScripts{
    @*
        this code is sourced from here
        https://forums.asp.net/t/2026059.aspx?How+to+add+Rich+Text+Controls+to+textbox+in+asp+net+MVC
    *@
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script type="text/javascript">
        // Initialize your tinyMCE Editor with your preferred options
        tinyMCE.init({
            // General options
            mode: "textareas",
            theme: "modern",
            // Theme options
            theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect,fontselect,fontsizeselect",
            theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
            theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
            theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,spellchecker,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,blockquote,pagebreak,|,insertfile,insertimage",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,

            // Example content CSS (should be your site CSS)
            content_css: "~/Content/Site.css",
        });
    </script>
    @*
        This site i mound that have modules to enable a bueatiful multiple select box with search function.
        i could hook this up with ajax to allow users to assign multiple authors in a published research article
        https://select2.github.io/
    *@

    <link href="~/Content/select2/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2/select2.min.js"></script>

    <script type="text/javascript">
        $(".js-example-basic-multiple").select2();
    </script>
    
}
    @Scripts.Render("~/bundles/jqueryval")
<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Research</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.schoolID, "schoolID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("schoolID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.schoolID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.publishedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.publishedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.publishedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <label class="control-label col-md-2">Authors</label>

            <div class="col-md-10">
               @Html.DropDownList("items", new MultiSelectList(ViewBag.authorID,), new { multiple = "multiple" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.grants, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.grants, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.grants, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.views, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.views, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.views, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.downloads, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.downloads, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.downloads, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.abstracts, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.abstracts, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.abstracts, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


